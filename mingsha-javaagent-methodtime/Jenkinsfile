pipeline {
    agent { label 'linux' }

    tools {
        jdk 'jdk17'
    }

    environment {
        MAVEN_OPTS = '-Dmaven.test.failure.ignore=false'
        EMAIL_RECIPIENTS = 'dev-team@example.com'
        EMAIL_SUBJECT = '[构建通知] mingsha-javaagent-methodtime #${BUILD_NUMBER} - ${BUILD_STATUS}'
        EMAIL_BODY = '''
            <h3>Jenkins 构建通知</h3>
            <ul>
                <li>项目: mingsha-javaagent-methodtime</li>
                <li>构建编号: ${BUILD_NUMBER}</li>
                <li>状态: ${BUILD_STATUS}</li>
                <li>分支: ${GIT_BRANCH}</li>
                <li>提交: ${GIT_COMMIT}</li>
                <li>详情: <a href="${BUILD_URL}">${BUILD_URL}</a></li>
            </ul>
        '''
        NUM_TO_KEEP = 1
        SKIP_TESTS = "${params.SKIP_TESTS ?: 'false'}"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: env.NUM_TO_KEEP))
        parameters([
            booleanParam(
                name: 'SKIP_TESTS',
                defaultValue: false,
                description: '是否跳过测试'
            )
        ])
    }

    stages {
        stage('Test') {
            when {
                expression { return env.SKIP_TESTS == 'false' }
            }
            steps {
                echo "🧪 执行单元测试..."
                sh './mvnw test'
            }
        }
        stage('Package') {
            steps {
                echo "📦 开始打包..."
                sh "./mvnw package -DskipTests=${env.SKIP_TESTS}"
            }
        }
        stage('Archive Artifacts') {
            steps {
                echo "📦 归档构建产物..."
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }
    }

    post {
        always {
            script {
                echo "🧹 清理工作空间..."
                cleanWs()
            }
        }
        success {
            script {
                echo "🎉 构建成功！"
                emailext(
                    to: env.EMAIL_RECIPIENTS,
                    subject: env.EMAIL_SUBJECT.replace('${BUILD_STATUS}', '成功'),
                    body: env.EMAIL_BODY.replace('${BUILD_STATUS}', '成功'),
                    mimeType: 'text/html'
                )
            }
        }
        failure {
            script {
                echo "❌ 构建失败！"
                emailext(
                    to: env.EMAIL_RECIPIENTS,
                    subject: env.EMAIL_SUBJECT.replace('${BUILD_STATUS}', '失败'),
                    body: env.EMAIL_BODY.replace('${BUILD_STATUS}', '失败'),
                    mimeType: 'text/html'
                )
            }
        }
        aborted {
            script {
                echo "⏹️  构建被中止！"
                emailext(
                    to: env.EMAIL_RECIPIENTS,
                    subject: env.EMAIL_SUBJECT.replace('${BUILD_STATUS}', '中止'),
                    body: env.EMAIL_BODY.replace('${BUILD_STATUS}', '中止'),
                    mimeType: 'text/html'
                )
            }
        }
    }
}
